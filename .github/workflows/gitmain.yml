name: GIT CI/CD to AWS
on:
  push:
    branches:
      - main
env:
  PROJECT_NAME: gitAndCICD
jobs:
  prep-docker:
    runs-on: ubuntu-latest
    outputs:
      DOCKER_IMAGE: ${{steps.share_infos.outputs.IMG_TAG}}
      IMAGE_VERSION: ${{steps.share_infos.outputs.IMG_VERSION}}
      IMAGE_COLOR: ${{steps.share_infos.outputs.mycolor}}
    steps:
      - name: CheckOut ci
        uses: actions/checkout@v2
      - name: Output Run ID
        run: echo run id is ${{ github.run_id }}
      - name: Output Run Number
        run: echo run number is ${{ github.run_number }}
      - name: Output Run Attempt
        run: echo run_attempt is ${{ github.run_attempt }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2
      - name: login docker
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USER_NAME}}
          password: ${{secrets.DOCKER_PWD}}
      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{secrets.DOCKER_USER_NAME}}/gitflaskapp:${{github.run_number}}
      - name: share infos
        id: share_infos
        run: |
          echo "::set-output name=IMG_TAG::helloworld/gitflaskapp:${{github.run_number}}"
          echo "MG_VERSION=${{ github.run_number }}.0.0" >>$GITHUB_OUTPUT
          echo "mycolor=blue123" >>$GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: prep-docker
    steps:
      - name: check first job docker tag
        run: |
          echo docker image full name is ${{needs.prep-docker.outputs.DOCKER_IMAGE}}
          echo docker iamge version is ${{needs.prep-docker.outputs.IMAGE_VERSION}}
          echo docker iamge color is ${{needs.prep-docker.outputs.IMAGE_COLOR}}
  terrfornjob:
    runs-on: ubuntu-latest
    needs: [prep-docker,job2]
    outputs:
      K8S_IMG: ${{steps.tf_out.outputs.tfimage}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: tf_init
        run: terraform init 
        working-directory: ./tfdir
      - name: Terraform Plan
        id: tf_plan
        run: |-
          terraform plan -destroy \
          -var="username=adam" \
          -var="imagename=${{needs.prep-docker.outputs.DOCKER_IMAGE}}" \
          -out=PLAN
        working-directory: ./tfdir
      - name: Terraform Apply
        id: tf_apply
        run: |-
          terraform apply -auto-approve
      - name: set tf Output
        id: tf_out
        run: |-
          echo "tfimage=${{needs.prep-docker.outputs.DOCKER_IMAGE}}" >>$GITHUB_OUTPUT
        working-directory: ./tfdir
  job3:
    runs-on: ubuntu-latest
    needs: terrfornjob
    steps:
      - name: check terraform task
        run: |-
          echo kubernetes pod docker image: ${{needs.terrfornjob.outputs.K8S_IMG}}
